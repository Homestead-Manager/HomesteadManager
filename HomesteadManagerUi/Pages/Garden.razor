@page "/generate"
@using HomesteadManager.Shared.Requests
@using HomesteadManager.Shared.Responses
@using HomesteadManagerUi.Services
@inject NavigationManager _nav
@inject ApiService api
<style>
    ul {
        list-style-type: square;
    }

    .garden-card {
        min-width: 200px;
        max-width: 300px;
    }

    .subtext {
        margin-left: 10px;
    }

    .left-flex {
        min-width: 210px;
    }
</style>
<PageTitle>Suggest Layout</PageTitle>
<div class="ma-3">
    <div>
        <div>Gardens: @request.Gardens.Count</div>
        <div>Total Size: @GetTotalSize() feet</div>
        <div>Plants</div>
        <ul>
            @foreach (var p in request.Plants)
            {
                <li class="ml-5">@p.CommonName</li>
            }
        </ul>
        <MudButton class="mt-3" Variant="Variant.Filled" Color="Color.Primary" OnClick="()=> GetSuggestedLayout()">
            Suggest
            Layout</MudButton>
    </div>
    <div class="mt-2">
        @if (loading)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            <div>Should totally have gardening puns here</div>

        }
        else if (garden != null)
        {
            <div>Suggested Layout</div>
            <MudGrid Spacing="4" class="mt-2 ml-2">
                @foreach (var g in garden.Gardens)
                {
                    <MudItem>
                        <MudCard class="garden-card">
                            <MudCardContent>
                                <MudText>Garden @g.GardenID</MudText>
                                <div class="subtext">
                                    <MudText Typo="Typo.body2">Length: @g.Dimensions.Length</MudText>
                                    <MudText Typo="Typo.body2">Width: @g.Dimensions.Width</MudText>
                                </div>

                                <MudText class="mt-2">Plants</MudText>
                                @foreach (var p in @g.Plants)
                                {
                                    <div class="subtext mb-2">
                                        <MudText Typo="Typo.body2">@p.Plant</MudText>
                                        <MudText Typo="Typo.body2">Quantity: @p.Quantity</MudText>
                                    </div>

                                }
                                <MudText Typo="Typo.caption">Notes: @g.Notes</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>

                }
            </MudGrid>

        }

    </div>

</div>




@code {
    bool loading = false;
    GardenResponse? garden = null;

    GardenRecommendationRequest request = new()
        {
            ZoneCode = "7a",
            Plants = new() {
new() {
PlantID = 1,
CommonName = "Tomato"
},
new() {
PlantID = 2,
CommonName = "Jalapeno"
},
new() {
PlantID = 3,
CommonName = "Cucumber"
},
new() {
PlantID = 4,
CommonName = "Cabbage"
},
new() {
PlantID = 5,
CommonName = "Borage"
}
},
            Gardens = new() {
new() {
GardenID = 1,
Size = new() {
Length = 4,
Width = 3,
}
},
new() {
GardenID = 2,
Size = new() {
Length = 4,
Width = 3,
}
},
new() {
GardenID = 3,
Size = new() {
Length = 4,
Width = 3,
}
},
new() {
GardenID = 4,
Size = new() {
Length = 6,
Width = 3,
}
},
new() {
GardenID = 5,
Size = new() {
Length = 6,
Width = 3,
}
},
}
        };
    private async Task GetSuggestedLayout()
    {
        try
        {
            garden = null;
            loading = true;
            garden = await api.GetSuggestedLayout(request);
        }
        finally
        {
            loading = false;
        }
    }

    private int GetTotalSize()
    {
        return request.Gardens.Select(g => g.Size.Length * g.Size.Width).Aggregate((acc, x) => acc + x);
    }
}